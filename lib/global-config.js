// Generated by LiveScript 1.2.0
(function(){
  var jsonlint, GlobalConfig;
  jsonlint = require('jsonlint');
  module.exports = GlobalConfig = (function(){
    GlobalConfig.displayName = 'GlobalConfig';
    var prototype = GlobalConfig.prototype, constructor = GlobalConfig;
    function GlobalConfig(options){
      this.options = options;
      this.librariesrc = './.librariesrc';
    }
    prototype.rcJson = function(){
      return this._rcJson || (this._rcJson = jsonlint.parse(this.loadRc()));
    };
    prototype.loadRc = function(){
      return this.rc || (this.rc = fs.readFileSync(this.librariesrc, 'utf-8'));
    };
    prototype.componentsDir = function(){
      return this.rcJson().componentsDir || this['default'].components.dir;
    };
    prototype['default'] = {
      dir: './xlibs/',
      builds: {
        dir: function(){
          return [GlobalConfig.dir, 'builds'].join('/');
        }
      },
      components: {
        dir: function(){
          return [GlobalConfig.dir, 'components'].join('/');
        },
        file: function(){
          return [this.dir, 'index.json'].join('/');
        }
      },
      selected: {
        file: function(){
          return [GlobalConfig.dir, 'selected'].join('/');
        }
      },
      config: function(){
        return [GlobalConfig.dir, 'config.json'].join('/');
      },
      registries: [{
        'libraries-official': {
          type: 'uri',
          repo: 'kristianmandrup/libraries'
        }
      }]
    };
    prototype.componentsFile = function(){
      return this.rcJson().componentsFile || this['default'].components.file;
    };
    prototype.configFile = function(){
      return this.rcJson().configFile || this['default'].config.file;
    };
    prototype.registries = function(){
      return parseRegistries(this.rcJson().registries) || this['default'].registries;
    };
    prototype.parseRegistries = function(regs){
      return regs;
    };
    return GlobalConfig;
  }());
}).call(this);
