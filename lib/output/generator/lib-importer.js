// Generated by LiveScript 1.2.0
(function(){
  var LibImporter, toString$ = {}.toString;
  module.exports = LibImporter = (function(){
    LibImporter.displayName = 'LibImporter';
    var prototype = LibImporter.prototype, constructor = LibImporter;
    function LibImporter(obj, libs){
      this.obj = obj;
      this.libs = libs;
      this.validate();
      this;
    }
    prototype.validate = function(){
      if (toString$.call(this.obj).slice(8, -1) !== 'Object') {
        throw new Error("LibImporter must take an Object as first arg");
      }
      if (toString$.call(this.libs).slice(8, -1) !== 'Object') {
        throw new Error("libs must be an Object");
      }
    };
    prototype.importLib = function(location){
      return this.obj.app['import'](this.obj.directory + '/' + location);
    };
    prototype.importAll = function(){
      var name, ref$, location, results$ = [];
      for (name in ref$ = this.libs) {
        location = ref$[name];
        results$.push(this.importLib(key + '/' + location));
      }
      return results$;
    };
    return LibImporter;
  }());
}).call(this);
