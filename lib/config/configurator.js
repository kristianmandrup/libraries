// Generated by LiveScript 1.2.0
(function(){
  var FileIO, Configurator;
  FileIO = require('../file-io');
  module.exports = Configurator = (function(){
    Configurator.displayName = 'Configurator';
    var prototype = Configurator.prototype, constructor = Configurator;
    importAll$(prototype, arguments[0]);
    function Configurator(file){
      this.file = file;
      this.file || (this.file = './xlibs/config.json');
      this.validate();
      this.read();
      this.config = this.json().config || {};
      this;
    }
    prototype.validate = function(){
      if (!this.exists()) {
        throw new Error("File " + this.file + " does not exist");
      }
    };
    prototype.part = function(name){
      return this.json()[name] || {};
    };
    prototype.components = function(name){
      return this.part(name).components || [];
    };
    prototype.libs = function(name){
      return this.part(name).libs || {};
    };
    return Configurator;
  }(FileIO));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
