// Generated by LiveScript 1.2.0
(function(){
  var ConfigNormalizer, Normalizer, toString$ = {}.toString;
  ConfigNormalizer = require('./normalizer/config-normalizer');
  module.exports = Normalizer = (function(){
    Normalizer.displayName = 'Normalizer';
    var prototype = Normalizer.prototype, constructor = Normalizer;
    function Normalizer(config, options){
      this.config = config;
      this.options = options != null
        ? options
        : {};
      this.validate();
      this;
    }
    prototype.validate = function(){
      if (toString$.call(this.config).slice(8, -1) !== 'Object') {
        throw new Error("Config to normalize must be an Object, was: " + this.config);
      }
    };
    prototype.shouldNormalize = function(){
      return this.keys()['dir'] === void 8;
    };
    prototype.keys = function(){
      return this._keys || (this._keys = Object.keys(this.config));
    };
    prototype.normalize = function(force){
      if (this.shouldNormalize() || force) {
        this.config = this.configNormalizer().normalize();
      }
      return this.config;
    };
    prototype.configNormalizer = function(){
      return new ConfigNormalizer(this.config);
    };
    return Normalizer;
  }());
}).call(this);
