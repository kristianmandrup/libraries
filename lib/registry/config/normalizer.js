// Generated by LiveScript 1.2.0
(function(){
  var BowerAdapter, ComponentAdapter, ConfigNormalizer, toString$ = {}.toString;
  BowerAdapter = require('bower-adapter');
  ComponentAdapter = require('component-adapter');
  module.exports = ConfigNormalizer = (function(){
    ConfigNormalizer.displayName = 'ConfigNormalizer';
    var prototype = ConfigNormalizer.prototype, constructor = ConfigNormalizer;
    function ConfigNormalizer(config, type){
      this.config = config;
      this.type = type != null ? type : 'bower';
      this.validate();
    }
    prototype.validate = function(){
      if (toString$.call(this.config).slice(8, -1) !== 'Object') {
        throw new Error("Config to normalize must be an Object, was: " + this.config);
      }
    };
    prototype.normalize = function(){};
    prototype.adapter = function(){
      return this.adapters[this.type] || this.badAdapter();
    };
    prototype.badAdapter = function(){
      return this.error("Adapter for " + this.type + " has not been registered");
    };
    prototype.error = function(msg){
      return console.error(msg);
    };
    prototype.adapters = {
      bower: BowerAdapter,
      component: BowerAdapter
    };
    return ConfigNormalizer;
  }());
}).call(this);
