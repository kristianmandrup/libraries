// Generated by LiveScript 1.2.0
(function(){
  var FileLoader, JsonLoader, CompositeLoader, ConfigLoader, slice$ = [].slice, toString$ = {}.toString;
  FileLoader = require('adater/file-loader');
  JsonLoader = require('adater/json-loader');
  CompositeLoader = require('adater/composite-loader');
  module.exports = ConfigLoader = (function(){
    ConfigLoader.displayName = 'ConfigLoader';
    var prototype = ConfigLoader.prototype, constructor = ConfigLoader;
    function ConfigLoader(type){
      this.type = type;
      this.args = slice$.call(arguments, 1);
      this.type || (this.type = 'all');
      this.validate();
    }
    prototype.validate = function(){
      if (toString$.call(this.type).slice(8, -1) !== 'String') {
        throw new Error("Type must be a String, was: " + this.type);
      }
    };
    prototype.adapter = function(){
      return new this.selectedLoader().apply(null, this.args);
    };
    prototype.selectedLoader = function(){
      switch (this.type) {
      case 'file':
        return FileLoader;
      case 'json':
        return JsonLoader;
      case 'composite':
        return CompositeLoader;
      default:
        throw new Error("unknown Installer " + this.type);
      }
    };
    return ConfigLoader;
  }());
}).call(this);
