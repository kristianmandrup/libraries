// Generated by LiveScript 1.2.0
(function(){
  var path, RootPath, toString$ = {}.toString, slice$ = [].slice;
  path = require('path');
  module.exports = RootPath = (function(){
    RootPath.displayName = 'RootPath';
    var prototype = RootPath.prototype, constructor = RootPath;
    function RootPath(files){
      this.files = files;
      this.validate();
    }
    prototype.validate = function(){
      if (toString$.call(this.files).slice(8, -1) !== 'Array') {
        throw Error("Files must be an Array, was: " + this.files);
      }
    };
    prototype.find = function(){
      return this._root || (this._root = this.findRootPath(path.dirname(this.files[0])));
    };
    prototype.findRootPath = function(filePath, lv, root){
      var paths, path, i$, ref$, len$, file;
      lv == null && (lv = 0);
      paths = filePath.split('/');
      path = slice$.call(paths, 0, lv + 1 || 9e9).join('/');
      for (i$ = 0, len$ = (ref$ = this.files).length; i$ < len$; ++i$) {
        file = ref$[i$];
        if (!file.match(new RegExp("^" + path))) {
          return root;
        }
      }
      return this.findRootPath(file, lv + 1, path);
    };
    return RootPath;
  }());
}).call(this);
