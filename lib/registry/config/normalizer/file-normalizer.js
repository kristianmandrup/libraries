// Generated by LiveScript 1.2.0
(function(){
  var FileNormalizer;
  module.exports = FileNormalizer = (function(){
    FileNormalizer.displayName = 'FileNormalizer';
    var prototype = FileNormalizer.prototype, constructor = FileNormalizer;
    function FileNormalizer(file){
      this.file = file;
    }
    prototype.normalize = function(file){
      var ext;
      ext = path.extname(file);
      this.type = this.findType(ext, file);
      if (this.type) {
        this.addFile();
        return this.setDir();
      }
    };
    prototype.findType = function(){
      var key, ref$, value;
      for (key in ref$ = this.types) {
        value = ref$[key];
        if (value.indexOf(this.type) > -1) {
          return key;
        }
      }
      return console.error("Unknown file type: " + this.type + " for " + this.file);
    };
    prototype.types = {
      script: ['js', 'coffee', 'ls'],
      styles: ['css', 'scss', 'less', 'sass'],
      fonts: ['eof', 'svg']
    };
    prototype.addFile = function(){
      var entry;
      entry = normalized[this.type];
      entry.files || (entry.files = []);
      return entry.files.push(this.file);
    };
    prototype.setDir = function(){
      var dir, entry, current;
      dir = path.dirname(this.file);
      entry = normalized[this.type];
      current = entry.dir;
      if (current === void 8) {
        entry.dir = dir;
      }
      if (current !== dir) {
        return entry.dir = '';
      }
    };
    return FileNormalizer;
  }());
}).call(this);
