// Generated by LiveScript 1.2.0
/**
 * User: kristianmandrup
 * Date: 06/10/14
 * Time: 14:06
 */
(function(){
  var FileIO, Registry;
  FileIO = require('file-io');
  module.exports = Registry = (function(){
    Registry.displayName = 'Registry';
    var prototype = Registry.prototype, constructor = Registry;
    importAll$(prototype, arguments[0]);
    function Registry(uriRoot){
      this.uriRoot = uriRoot;
      this.uriRoot || (this.uriRoot = './xlibs/registry');
      this;
    }
    prototype.indexFile = function(){
      return [this.uriRoot, 'index.json'].join('/');
    };
    prototype.index = function(){
      return this.read(indexFile);
    };
    prototype.configFile = function(name){
      return [this.uriRoot, name + ".json"].join('/');
    };
    prototype.targetConfig = function(name){
      return [this.targetPath, name + ".json"].join('/');
    };
    prototype.install = function(name, targetPath){
      this.targetPath = targetPath != null ? targetPath : './xlibs/components';
      return fs.copy(this.configFile(name), this.targetConfig(name));
    };
    prototype.uninstall = function(name, targetPath){
      this.targetPath = targetPath != null ? targetPath : './xlibs/components';
      return fs['delete'](this.targetConfig(name));
    };
    return Registry;
  }(FileIO));
  function importAll$(obj, src){
    for (var key in src) obj[key] = src[key];
    return obj;
  }
}).call(this);
