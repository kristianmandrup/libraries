// Generated by LiveScript 1.2.0
/**
 * User: kristianmandrup
 * Date: 11/10/14
 * Time: 10:18
 */
(function(){
  var util, Lib, toString$ = {}.toString;
  util = require('util');
  module.exports = Lib = (function(){
    Lib.displayName = 'Lib';
    var prototype = Lib.prototype, constructor = Lib;
    function Lib(name, location, options){
      this.name = name;
      this.location = location;
      this.options = options != null
        ? options
        : {};
      this.validate();
      this;
    }
    prototype.validate = function(){
      if (toString$.call(this.name).slice(8, -1) !== 'String') {
        throw new Error("Name must be an String, was: " + util.inspect(this.name));
      }
      if (toString$.call(this.location).slice(8, -1) !== 'String') {
        throw new Error("Location must be a String, was: " + util.inspect(this.location));
      }
      if (toString$.call(this.options).slice(8, -1) !== 'Object') {
        throw new Error("Options must be an Object, was: " + util.inspect(this.options));
      }
    };
    Lib.fromObject = function(name, obj){
      if (!obj.at) {
        throw new Error("Library " + name + " must have an .at key");
      }
      return new Lib(name, obj.at, obj.opts);
    };
    prototype.output = function(cb){
      cb || (cb = this.emit);
      return cb(this.location);
    };
    prototype.emit = function(location){
      return "app.import('" + location + "');";
    };
    return Lib;
  }());
}).call(this);
