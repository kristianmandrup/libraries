// Generated by LiveScript 1.2.0
/**
 * User: kristianmandrup
 * Date: 12/10/14
 * Time: 10:23
 */
(function(){
  var expect, Containers, log;
  expect = require('chai').expect;
  Containers = require('../../../lib/config/containers');
  log = console.log;
  describe('Containers', function(){
    var containers, conf;
    conf = {};
    conf.bower = {
      libs: {
        datepicker: "blip",
        'ember-validations': "dist/ember-validations"
      },
      components: ['bootstrap']
    };
    describe('create', function(){
      context('invalid', function(){
        specify('no args throws', function(){
          return expect(function(){
            return new Containers;
          }).to['throw'];
        });
        specify('bad nam throws', function(){
          return expect(function(){
            return new Containers(7);
          }).to['throw'];
        });
        return specify('non-existing file', function(){
          return expect(function(){
            return new Containers('x');
          }).to.not['throw'];
        });
      });
      return context('valid', function(){
        specify('obj is ok', function(){
          return expect(function(){
            return new Containers({
              libs: 'x'
            });
          }).to.not['throw'];
        });
        return specify('allow empty obj', function(){
          return expect(function(){
            return new Containers({});
          }).to.not['throw'];
        });
      });
    });
    return describe('valid container', function(){
      beforeEach(function(){
        return containers = new Containers(conf.bower);
      });
      return describe('container(name)', function(){
        specify('bower is not empty', function(){
          return expect(containers.container('bower')).to.not.be['void'];
        });
        return specify('vendor has no libs', function(){
          return expect(containers.container('vendor').libs()).to.eql({});
        });
      });
    });
  });
}).call(this);
