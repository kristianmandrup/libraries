// Generated by LiveScript 1.2.0
/**
 * User: kristianmandrup
 * Date: 06/10/14
 * Time: 14:38
 */
(function(){
  var expect, Component;
  expect = require('chai').expect;
  Component = require('../../../lib/component/component');
  describe('Component', function(){
    var component, comp, conf;
    conf = {};
    conf.bootstrap = {
      dir: 'dist',
      scripts: {
        files: ['js/bootstrap.js']
      }
    };
    describe('create', function(){
      context('invalid', function(){
        specify('no args throws', function(){
          return expect(function(){
            return new Component;
          }).to['throw'];
        });
        specify('bad nam throws', function(){
          return expect(function(){
            return new Component(7);
          }).to['throw'];
        });
        return specify('no obj throws', function(){
          return expect(function(){
            return new Component('x');
          }).to['throw'];
        });
      });
      return context('valid', function(){
        return specify('name and obj :)', function(){
          return expect(function(){
            return new Component('x', {});
          }).to.not['throw'];
        });
      });
    });
    return describe('valid component', function(){
      beforeEach(function(){
        return component = new Component('bootstrap', conf.bootstrap);
      });
      describe('name', function(){
        return specify('is set', function(){
          return expect(component.name).to.eql('bootstrap');
        });
      });
      describe('comp', function(){
        return specify('is set', function(){
          return expect(component.comp).to.eql(conf.bootstrap);
        });
      });
      describe('base-dir', function(){
        return specify('is set', function(){
          return expect(component.baseDir).to.eql(conf.bootstrap.dir);
        });
      });
      describe('location (dir, file)', function(){
        return specify('full script path', function(){
          return expect(component.location('js', 'bootstrap.js')).to.eql("dist/js/bootstrap.js");
        });
      });
      describe('locations', function(){
        return specify('for scripts -> full script paths', function(){
          return expect(component.locations('scripts')).to.eql(["dist/js/bootstrap.js"]);
        });
      });
      return describe('location-obj', function(){
        return specify('for all -> full script paths', function(){
          return expect(component.locationObj()).to.eql({
            scripts: ["dist/js/bootstrap.js"]
          });
        });
      });
    });
  });
}).call(this);
