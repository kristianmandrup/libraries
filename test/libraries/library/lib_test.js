// Generated by LiveScript 1.2.0
/**
 * User: kristianmandrup
 * Date: 12/10/14
 * Time: 11:45
 */
(function(){
  var expect, Lib, log;
  expect = require('chai').expect;
  Lib = require('../../../lib/library/lib');
  log = console.log;
  describe('Lib', function(){
    var lib, libs;
    libs = {};
    libs.bower = {
      "ember-validations": "dist/ember-validations",
      "ember-easyform": [
        "dist/ember-easyform", {
          remap: 'x/y'
        }
      ],
      "moment": {
        at: "momentjs/index.js",
        opts: {
          remap: 'moment/core'
        }
      }
    };
    describe('create', function(){
      context('invalid', function(){
        specify('no args throws', function(){
          return expect(function(){
            return new Lib;
          }).to['throw'];
        });
        specify('number throws', function(){
          return expect(function(){
            return new Libs(7);
          }).to['throw'];
        });
        return specify('string throws', function(){
          return expect(function(){
            return new Lib('x');
          }).to['throw'];
        });
      });
      context('valid', function(){
        return specify('name and location strings', function(){
          return expect(function(){
            return new Lib('x', 'y');
          }).to.not['throw'];
        });
      });
      return describe('fromObject', function(){
        specify('invalid unless .at', function(){
          return expect(function(){
            return new Lib.fromObject('x', {
              a: 'b'
            });
          }).to['throw'];
        });
        return specify('valid if .at', function(){
          return expect(function(){
            return new Lib.fromObject('x', {
              at: 'b'
            });
          }).to.not['throw'];
        });
      });
    });
    return context('valid libs', function(){
      beforeEach(function(){
        return lib = new Lib("ember-validations", libs.bower["ember-validations"]);
      });
      describe('output', function(){
        specify('default emit ok', function(){
          return expect(lib.output()).to.eql("app.import('dist/ember-validations');");
        });
        return specify('custom emit ok', function(){
          return expect(lib.output(function(loc){
            return loc;
          })).to.eql("dist/ember-validations");
        });
      });
      return describe('emit', function(){
        return specify('is ok', function(){
          return expect(lib.emit("ember-validations")).to.eql("app.import('ember-validations');");
        });
      });
    });
  });
}).call(this);
