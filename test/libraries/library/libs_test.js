// Generated by LiveScript 1.2.0
(function(){
  var expect, Libs, log;
  expect = require('chai').expect;
  Libs = require('../../../lib/library/libs');
  log = console.log;
  describe('Libs', function(){
    var libs, lib;
    lib = {};
    lib.bower = {
      "ember-validations": "dist/ember-validations",
      "ember-easyform": "dist/ember-easyform",
      "moment": {
        "moment": "momentjs/index"
      }
    };
    describe('create', function(){
      context('invalid', function(){
        specify('no args throws', function(){
          return expect(function(){
            return new Libs;
          }).to['throw'];
        });
        specify('number throws', function(){
          return expect(function(){
            return new Libs(7);
          }).to['throw'];
        });
        return specify('string throws', function(){
          return expect(function(){
            return new Libs('x');
          }).to['throw'];
        });
      });
      return context('valid', function(){
        return expect(function(){
          return new Libs({});
        }).to.not['throw'];
      });
    });
    return describe('valid libs', function(){
      beforeEach(function(){
        return libs = new Libs(lib.bower);
      });
      describe('add', function(){
        return specify('adds lib', function(){
          return expect(libs.add({
            blip: 'dist/blap'
          }).libs['blip']).to.not.eql(void 8);
        });
      });
      return describe('remove', function(){
        return specify('removes lib', function(){
          return expect(libs.remove('blip').libs['blip']).to.eql(void 8);
        });
      });
    });
  });
}).call(this);
