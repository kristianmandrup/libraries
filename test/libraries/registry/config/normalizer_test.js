// Generated by LiveScript 1.2.0
(function(){
  var expect, log, Normalizer, LocalComponentAdapter, FilesNormalizer;
  expect = require('chai').expect;
  log = console.log;
  Normalizer = require('../../../../lib/registry/config/normalizer');
  LocalComponentAdapter = require('../../../../lib/registry/config/package/component/local-component');
  FilesNormalizer = require('../../../../lib/registry/config/normalizer/files-normalizer');
  describe('Normalizer', function(){
    return describe('create(@config, @options = {})', function(){
      context('invalid', function(){
        specify('no args throws', function(){
          return expect(function(){
            return new Normalizer.to['throw'];
          });
        });
        return specify('string args throws', function(){
          return expect(function(){
            return new Normalizer('x').to['throw'];
          });
        });
      });
      context('valid', function(){
        return specify('config obj ok', function(){
          return expect(function(){
            return new Normalizer({}, {
              type: 'component'
            }).to.not['throw'];
          });
        });
      });
      return context('instance', function(){
        var normalizer;
        beforeEach(function(){
          return normalizer = new Normalizer({}, {
            type: 'component'
          });
        });
        describe('type', function(){
          return specify('set to component', function(){
            return expect(normalizer.type).to.eql('component');
          });
        });
        describe('from', function(){
          return specify('defaults to local', function(){
            return expect(normalizer.from).to.eql('local');
          });
        });
        describe('bad-adapter', function(){
          return specify('throws', function(){
            return expect(normalizer.badAdapter()).to['throw'];
          });
        });
        describe('adapter-clazz', function(){
          return specify('gets one', function(){
            return expect(normalizer.adapterClazz()).to.eql(LocalComponentAdapter);
          });
        });
        describe('adapter', function(){
          return specify('gets one', function(){
            return expect(normalizer.adapter()).to.be.an.instanceOf(LocalComponentAdapter);
          });
        });
        return describe('files-normalizer', function(){
          return specify('creates one', function(){
            return expect(normalizer.filesNormalizer()).to.be.an.instanceOf(FilesNormalizer);
          });
        });
      });
    });
  });
}).call(this);
