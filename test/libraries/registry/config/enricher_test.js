// Generated by LiveScript 1.2.0
(function(){
  var expect, log, Enricher, PkgAdapter, LocalBowerAdapter;
  expect = require('chai').expect;
  log = console.log;
  Enricher = require('../../../../lib/registry/config/enricher');
  PkgAdapter = require('../../../../lib/registry/config/package/pkg-adapter');
  LocalBowerAdapter = require('../../../../lib/registry/config/package/bower/local-bower');
  describe('Enricher', function(){
    return describe('create(@name, @config, @options = {})', function(){
      context('invalid', function(){
        specify('no args throws', function(){
          return expect(function(){
            return new Enricher.to['throw'];
          });
        });
        return specify('string args throws', function(){
          return expect(function(){
            return new Enricher('x').to['throw'];
          });
        });
      });
      context('valid', function(){
        return specify('config obj ok', function(){
          return expect(function(){
            return new Enricher('bootstrap', {}, {
              type: 'bower'
            }).to.not['throw'];
          });
        });
      });
      return context('instance', function(){
        var enricher;
        beforeEach(function(){
          return enricher = new Enricher({
            categories: ['ui']
          }, {
            type: 'bower',
            name: 'bootstrap'
          });
        });
        describe('enrich', function(){
          return specify('enriches config', function(){
            return enricher.enrich().then(function(res){
              expect(res.categories).to.include("ui");
              return expect(res.files).to.include("less/bootstrap.less");
            });
          });
        });
        describe('adapted', function(){
          before(function(){
            return enricher.adapt();
          });
          return specify('is adapted obj', function(){
            return expect(enricher.adapted()).to.eql({});
          });
        });
        describe('adapt', function(){
          return specify('adapts', function(){
            return enricher.adapt().then(function(res){
              return expect(res.files).to.include("less/bootstrap.less");
            });
          });
        });
        return describe('pkg-adapter', function(){
          specify('is a PkgAdapter', function(){
            return expect(enricher.pkgAdapter()).to.be.an.instanceOf(PkgAdapter);
          });
          return specify('uses a LocalBowerAdapter', function(){
            return expect(enricher.pkgAdapter().adapter()).to.be.an.instanceOf(LocalBowerAdapter);
          });
        });
      });
    });
  });
}).call(this);
