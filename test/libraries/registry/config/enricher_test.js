// Generated by LiveScript 1.2.0
(function(){
  var enricher, LocalComponentAdapter;
  enricher = require('../../../../lib/registry/config/enricher');
  LocalComponentAdapter = require('../../../../lib/registry/config/package/component/local-component');
  describe('Enricher', function(){
    return describe('create(@name, @config, @options = {})', function(){
      context('invalid', function(){
        specify('no args throws', function(){
          return expect(function(){
            return new Enricher.to['throw'];
          });
        });
        return specify('string args throws', function(){
          return expect(function(){
            return new Enricher('x').to['throw'];
          });
        });
      });
      context('valid', function(){
        return specify('config obj ok', function(){
          return expect(function(){
            return new Enricher('bootstrap', {}, {
              type: 'bower'
            }).to.not['throw'];
          });
        });
      });
      return context('instance', function(){
        var enricher;
        beforeEach(function(){
          return enricher = new Enricher({
            categories: ['ui']
          }, {
            type: 'bower',
            name: 'bootstrap'
          });
        });
        describe('enrich', function(){
          return specify('enriches config', function(){
            return expect(normalizer.enrich()).to.eql({});
          });
        });
        describe('type', function(){
          return specify('set to component', function(){
            return expect(normalizer.type).to.eql('component');
          });
        });
        describe('from', function(){
          return specify('defaults to local', function(){
            return expect(normalizer.from).to.eql('local');
          });
        });
        describe('bad-adapter', function(){
          return specify('throws', function(){
            return expect(normalizer.badAdapter()).to['throw'];
          });
        });
        describe('adapter-clazz', function(){
          return specify('gets one', function(){
            return expect(normalizer.adapterClazz()).to.eql(LocalComponentAdapter);
          });
        });
        return describe('adapter', function(){
          return specify('gets one', function(){
            return expect(normalizer.adapter('bootstrap')).to.be.an.instanceOf(LocalComponentAdapter);
          });
        });
      });
    });
  });
}).call(this);
