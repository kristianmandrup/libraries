// Generated by LiveScript 1.2.0
(function(){
  var expect, CompositeLoader, LocalLoader, RemoteLoader, log;
  expect = require('chai').expect;
  CompositeLoader = require('../../../../../lib/registry/config/loader/composite-loader');
  LocalLoader = require('../../../../../lib/registry/config/loader/local-loader');
  RemoteLoader = require('../../../../../lib/registry/config/loader/remote-loader');
  log = console.log;
  describe('CompositeLoader', function(){
    var loader, config;
    config = {
      local: './xlibs/components/bootstrap.json'
    };
    describe('create', function(){
      context('invalid', function(){
        return specify('number throws', function(){
          return expect(function(){
            return new CompositeLoader(7);
          }).to['throw'];
        });
      });
      return context('valid', function(){
        specify('name string is ok', function(){
          return expect(function(){
            return new CompositeLoader('x');
          }).to.not['throw'];
        });
        return specify('name, path string ok', function(){
          return expect(function(){
            return new CompositeLoader('x', 'y');
          }).to.not['throw'];
        });
      });
    });
    return describe('valid instance', function(){
      before(function(){
        return loader = new CompositeLoader('bootstrap');
      });
      return describe('load-config', function(){
        return specify('loads config', function(){
          return expect(loader.loadConfig().dir).to.eql('dist');
        });
      });
    });
  });
}).call(this);
