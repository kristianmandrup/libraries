// Generated by LiveScript 1.2.0
(function(){
  var expect, FileNormalizer, log;
  expect = require('chai').expect;
  FileNormalizer = require('../../../../lib/registry/config/normalizer/file-normalizer');
  log = console.log;
  describe('FilesNormalizer', function(){
    describe('create(@config)', function(){
      describe('invalid', function(){
        return specify('no args invalid', function(){
          return expect(function(){
            return new FilesNormalizer.to['throw'];
          });
        });
      });
      return describe('valid', function(){
        return specify('name arg is valid', function(){
          return expect(function(){
            return new FilesNormalizer('x');
          }).to['throw'];
        });
      });
    });
    return context('valid instance', function(){
      var normalizer;
      beforeEach(function(){
        return normalizer = new FilesNormalizer;
      });
      describe('normalize', function(){
        return expect(normalizer.normalize()).to.eql({});
      });
      describe('file-normalizer', function(){
        return expect(normalizer.fileNormalizer()).to.be.an.instanceOf(FileNormalizer);
      });
      describe('path-normalizer', function(){
        return expect(normalizer.pathNormalizer()).to.be.an.instanceOf(PathNormalizer);
      });
      return describe('normalized', function(){});
    });
  });
}).call(this);
