// Generated by LiveScript 1.2.0
(function(){
  var expect, log, PkgAdapter, LocalBowerAdapter;
  expect = require('chai').expect;
  log = console.log;
  PkgAdapter = require('../../../../../lib/registry/config/package/pkg-adapter');
  LocalBowerAdapter = require('../../../../../lib/registry/config/package/bower/local-bower');
  describe('PkgAdapter', function(){
    describe('create(@options = {})', function(){});
    return context('init', function(){
      var pkgAdapter;
      beforeEach(function(){
        return pkgAdapter = new PkgAdapter({
          name: 'bootstrap',
          type: 'bower'
        });
      });
      describe('adapt(name)', function(){
        return specify('is an Adapter', function(){
          return pkgAdapter.adapt().then(function(res){
            return expect(res.files).to.include("less/bootstrap.less");
          });
        });
      });
      describe('adapter(name)', function(){
        return specify('is an Adapter', function(){
          return expect(pkgAdapter.adapter()).to.be.an.instanceOf(LocalBowerAdapter);
        });
      });
      return describe('adapter-clazz', function(){
        return specify('is an Adapter class', function(){
          return expect(pkgAdapter.adapterClazz()).to.equal(LocalBowerAdapter);
        });
      });
    });
  });
}).call(this);
