// Generated by LiveScript 1.2.0
(function(){
  var chai, expect, log, chaiAsPromised, PkgInstaller;
  chai = require('chai');
  expect = chai.expect;
  log = console.log;
  chaiAsPromised = require("chai-as-promised");
  chai.use(chaiAsPromised);
  PkgInstaller = require('../../../../../lib/registry/config/package/pkg-installer');
  describe('PkgInstaller', function(){
    describe('create(@type, @names)', function(){});
    return context('valid instance', function(){
      var installer;
      beforeEach(function(){
        return installer = new PkgInstaller('bower', ['bootstrap', 'desandro/masonry', 'foundation']);
      });
      describe.only('install', function(){
        this.timeout(10000);
        beforeEach(function(){});
        afterEach(function(){});
        return specify('installs uninstalled packages', function(){
          var this$ = this;
          return installer.uninstall('desandro/masonry', 'foundation').then(function(){
            return expect(installer.install()).to.eventually.be['true'];
          });
        });
      });
      describe('pkg-name(name)', function(){
        specify('extracts from github endpoint', function(){
          return expect(installer.pkgName('git://github.com/user/package.git')).to.eql('package');
        });
        specify('extracts from github shorthand', function(){
          return expect(installer.pkgName('desandro/masonry')).to.eql('masonry');
        });
        return specify('return normal', function(){
          return expect(installer.pkgName('jquery')).to.eql('jquery');
        });
      });
      describe('bower-install', function(){
        return specify('bower install command', function(){
          return expect(installer.bowerInstall()).to.eql("bower install desandro/masonry foundation --save-dev");
        });
      });
      describe('component-install', function(){
        return specify('component-install command', function(){});
      });
      describe('uninstalled-args', function(){
        return specify('args list', function(){
          return expect(installer.uninstalledArgs()).to.eql("desandro/masonry foundation");
        });
      });
      describe('uninstalled', function(){
        return specify('finds uninstalled packages', function(){
          return expect(installer.uninstalled()).to.include('desandro/masonry', 'foundation');
        });
      });
      describe('installed', function(){
        return specify('finds installed packages', function(){
          return expect(installer.installed()).to.include('bootstrap');
        });
      });
      describe('is-installed-pkg(name)', function(){
        return specify('determine if package is present', function(){
          return expect(installer.isInstalledPkg('bootstrap')).to.be['true'];
        });
      });
      describe('pkg-dir(name)', function(){
        return specify('finds package dir', function(){
          return expect(installer.pkgDir('bootstrap')).to.eql('bower_components/bootstrap');
        });
      });
      return describe('container-dir', function(){
        return specify('finds package container dir', function(){
          return expect(installer.containerDir()).to.eql('bower_components');
        });
      });
    });
  });
}).call(this);
