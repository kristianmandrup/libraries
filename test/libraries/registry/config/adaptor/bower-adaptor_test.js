// Generated by LiveScript 1.2.0
(function(){
  var chai, expect, chaiAsPromised, util, Adaptor, log;
  chai = require('chai');
  expect = chai.expect;
  chaiAsPromised = require("chai-as-promised");
  chai.use(chaiAsPromised);
  util = require('util');
  Adaptor = require('../../../../../lib/registry/config/adaptor/bower-adaptor');
  log = console.log;
  describe('BowerAdapter', function(){
    describe('create(@name, @options = {})', function(){
      describe('invalid', function(){
        return specify('throws', function(){
          return expect(function(){
            return new Adaptor.to['throw'];
          });
        });
      });
      return describe('valid', function(){
        return specify('string arg - ok', function(){
          return expect(function(){
            return new Adaptor('x').to.not['throw'];
          });
        });
      });
    });
    return context('instance', function(){
      var adaptor;
      beforeEach(function(){
        return adaptor = new Adaptor('ember-bootstrap');
      });
      describe('adapt', function(){});
      describe('main', function(){});
      describe('files', function(){});
      describe('has-main', function(){});
      describe('main-files', function(){});
      describe('bower-json', function(){});
      describe('retrieve', function(){});
      describe('repo-translator', function(){});
      describe('repo-uri', function(){});
      describe('repo', function(){});
      describe('find-repos', function(){});
      return describe('find(cb)', function(){
        return specify('finds bower repo uri', function(){
          return expect(adaptor.find().promise).to.eventually.eql({
            type: 'alias',
            url: 'git://github.com/emberjs-addons/ember-bootstrap.git'
          });
        });
      });
    });
  });
}).call(this);
