// Generated by LiveScript 1.2.0
(function(){
  var expect, Installer, log;
  expect = require('chai').expect;
  Installer = require('../../../../lib/registry/installer/base-installer');
  log = console.log;
  describe('BaseInstaller', function(){
    var installer;
    describe('create', function(){
      context('invalid', function(){
        return specify('bad nam throws', function(){
          return expect(function(){
            return new Installer(7);
          }).to['throw'];
        });
      });
      return context('valid', function(){
        specify('name string is ok', function(){
          return expect(function(){
            return new Installer('x');
          }).to.not['throw'];
        });
        return specify('name, path string ok', function(){
          return expect(function(){
            return new Installer('x', 'y');
          }).to.not['throw'];
        });
      });
    });
    return describe('valid instance', function(){
      var io;
      before(function(){
        io = function(msg){
          return msg;
        };
        return installer = new Installer('bootstrap', ' ', 'bootstrap.json', {
          log: io
        });
      });
      describe('installing', function(){
        return specify('displays console install msg', function(){
          return expect(installer.installing()).to.match(/installing/);
        });
      });
      return describe('uninstalling', function(){
        return specify('displays console uninstall msg', function(){
          return expect(installer.uninstalling()).to.match(/uninstalling/);
        });
      });
    });
  });
}).call(this);
