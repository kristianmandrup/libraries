// Generated by LiveScript 1.2.0
(function(){
  var fs, config, Composite, Importer;
  fs = require('fs');
  config = {};
  Composite = require('./composite');
  module.exports = Importer = (function(){
    Importer.displayName = 'Importer';
    var prototype = Importer.prototype, constructor = Importer;
    function Importer(app, file){
      this.app = app;
      this.file = file != null ? file : './imports/libraries.json';
      this.libs();
      this;
    }
    prototype.readLibs = function(){
      return fs.readFileSync(this.file, 'utf8');
    };
    prototype.libs = function(){
      return this.libs = JSON.parse(this.readLibs());
    };
    prototype.importAll = function(){
      var key, ref$, value, results$ = [];
      this.config = this.libs['config'] || {};
      delete this.libs['config'];
      for (key in ref$ = this.libs) {
        value = ref$[key];
        results$.push(this.importFor(key, value));
      }
      return results$;
    };
    prototype.importFor = function(name, values){
      var directory;
      directory = this.config[name] || name;
      if (name === 'bower') {
        directory = this.app.bowerDirectory;
      }
      return new Composite(this.app, directory).importAll(values);
    };
    return Importer;
  }());
}).call(this);
