// Generated by LiveScript 1.2.0
(function(){
  var RemapImporter, toString$ = {}.toString;
  module.exports = RemapImporter = (function(){
    RemapImporter.displayName = 'RemapImporter';
    var prototype = RemapImporter.prototype, constructor = RemapImporter;
    function RemapImporter(obj, remaps){
      this.obj = obj;
      this.remaps = remaps;
      this.validate();
      this;
    }
    prototype.importAll = function(){
      if (!this.remaps) {
        return;
      }
      return this.importRemaps();
    };
    prototype.validate = function(){
      if (toString$.call(this.remaps).slice(8, -1) !== 'Object') {
        throw new Error("remap must be an Object");
      }
    };
    prototype.importRemaps = function(){
      var i$, ref$, len$, key, results$ = [];
      for (i$ = 0, len$ = (ref$ = Object.keys(this.remaps)).length; i$ < len$; ++i$) {
        key = ref$[i$];
        results$.push(this.importRemap(key, this.remaps[key]));
      }
      return results$;
    };
    prototype.importRemap = function(remap, location){
      var dir, options;
      dir = this.obj.directory + '/' + location;
      options = {
        remap: remap
      };
      return this.obj.app['import'](dir, options);
    };
    return RemapImporter;
  }());
}).call(this);
